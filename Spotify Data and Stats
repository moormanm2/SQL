# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

# Creating the table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1. Checked to make sure everything was transfered over okay.
SELECT * FROM BIT_DB.Spotifydata LIMIT 20

#2. What is the average dance ability for all the songs?
SELECT AVG(danceability) FROM BIT_DB.Spotifydata 

#3. What is the average dance ability by artist and track?
SELECT artist_name, track_name, AVG(danceability) AS average_danceability
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

#4. Who are the top 10 artists based on popularity?
SELECT artist_name, SUM(popularity) AS total_popularity
FROM BIT_DB.Spotifydata
GROUP BY artist_name 
ORDER BY total_popularity DESC
LIMIT 10

#5. What artist released the longest song?
SELECT artist_name, track_name, duration_ms
FROM C
ORDER BY duration_ms DESC
LIMIT 1

#6. What's the average dance ability of the 10 most popular songs?
SELECT AVG(danceability) AS average_danceability_of_top_10_songs
FROM 
(SELECT danceability
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10)

#7. What 10 songs have the most liveness?
SELECT artist_name, track_name, liveness
FROM BIT_DB.Spotifydata
ORDER BY liveness DESC
LIMIT 10

#8. What artist has the most songs in the data?
SELECT COUNT(track_name) AS numsongs, artist_name
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY numsongs DESC
LIMIT 2

#9. What is the average tempo for a song in the data?
SELECT AVG(tempo) 
FROM BIT_DB.Spotifydata

#10. Calculate the average popularity for the artists in the Spotify data table. 
      Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH tempTable AS(
SELECT s.artist_name, AVG(s.popularity) AS average_popularity
FROM Spotifydata s
GROUP BY s.artist_name)
SELECT artist_name, average_popularity, 'Top Star' AS tag
FROM tempTable
WHERE average_popularity >=90
ORDER BY average_popularity DESC;

