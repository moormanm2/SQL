#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

SELECT * FROM BIT_DB.customers LIMIT 20

SELECT * FROM BIT_DB.JanSales LIMIT 20

#1. How many orders were placed in January?
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE length(order_id) = 6
AND order_id <> 'Order ID'


#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE Product='iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID'


SELECT * FROM BIT_DB.FebSales LIMIT 20

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT DISTINCT acctnum FROM BIT_DB.customers cust
JOIN BIT_DB.FebSales feb
ON  cust.order_id = feb.orderID
WHERE length(order_id) = 6
AND order_id <> 'Order ID'


#4. Which product was the cheapest one sold in January, and what was the price?
SELECT product, MIN(price) FROM BIT_DB.JanSales

SELECT DISTINCT Product, price FROM BIT_DB.JanSales
WHERE price IN (SELECT MIN(price) FROM BIT_DB.JanSales)


#5. What is the total revenue for each product sold in January?
SELECT Product, SUM(Quantity)*price as revenue FROM BIT_DB.JanSales
GROUP BY Product


#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity),SUM(Quantity)*price AS Revenue FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product


#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers?
SELECT COUNT(cust.acctnum), AVG(quantity*price)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
On cust.order_id = feb.orderID
WHERE feb.Quantity>2
AND length(order_id) = 6
AND order_id <> 'Order ID'

#8. Show all the orderdates between 02/13/19 00:00' AND '02/18/19 00:00 in February.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00'

#9. What was the location of the order placed on 02/18/19 01:35 in Feb.?
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35'

#10. What was the total quantity ordered in Feb. on 02/18/19?
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%'

#11. Show all the battery products sold in Feb.
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%'

#12. Show all the products that have a price that ends with .99.
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99'

#13. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE  '%Los Angeles%'
GROUP BY Product

#14. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT COUNT(orderID),location
FROM BIT_DB.JanSales 
WHERE location LIKE '%New York%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY location
HAVING Count(orderID) > 2

#15. How many of each type of headphone were sold in February?
SELECT product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE product LIKE '%headphone%'
AND length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY product

#16. What was the average amount spent per account in February?
SELECT AVG(feb.quantity*feb.price)
FROM BIT_DB.FebSales feb
JOIN BIT_DB.customers c
ON feb.orderID = c.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID'

#17. What was the average quantity of products purchased per account in February?
SELECT SUM(feb.quantity)/COUNT(c.acctnum)
FROM BIT_DB.FebSales feb
JOIN BIT_DB.customers c
ON feb.orderID = c.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID'

#18. Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT product, SUM(quantity*price) AS total_revenue
FROM BIT_DB.JanSales
GROUP BY product
ORDER BY total_revenue DESC
LIMIT 1
